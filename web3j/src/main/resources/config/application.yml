workload:
  model: OPEN  # either OPEN or CLOSED workload model
  transactions: 1_000 # total transactions to be done
  load-factor: 10 # arrival rate for OPEN model & concurrency for CLOSED model
  progress-interval: 5s # interval for updating progress in web UI

web3j:
  ethClient:
    protocol: grpc # supports grpc, http, https
    host:  # IP of the ethereum client Node
    port: 50505 # port number (50505 - gRPC, 8545 - ethRPC)
    chain-id: 5000 # To enable EIP-155, use the chain id of the network that your Ethereum client is connected.
  credentials:
    wallet-file: src/main/resources/wallets/demo-wallet.json # wallet file location
    wallet-password: Password123 # wallet file password
    private-key: # private key of the sender account (Note: This takes precedence over wallet.)
  receipt:
    attempts: 5 # maximum number of polling attempts to get receipt
    interval: 1000 # sleep interval (ms) between polling attempts
  manage-nonce: true # Managing nonce would avoid the overhead of calling eth_getTransactionCount.
  log-level: NONE # NONE, BASIC, HEADERS, BODY
  queued-polling: false # set true for queued polling of transaction receipt, will only work with OPEN model

token:
  deploy-token: false
  name: SecureToken
  symbol: STK
  initial-supply: 2 # total tokens minted (value is internally multiplied by 10^18)
  recipient: 45412868cB693e231DfD4ABCCA29D7001501d06f # recipient account
  amount: 5 # amount of tokens transferred in one transaction
  gas-price: 4_100_000_000 # gas price
  gas-limit: 9_000_000 # gas limit

management:
  endpoints:
    web:
      exposure:
        include: info, health, env, metrics, prometheus
  metrics:
    tags:
      testName: demo
    export:
      prometheus:
        enabled: true
      wavefront:
        enabled: false
        uri: proxy://localhost:2878
        source:
        global-prefix: ethereum.web3j.token
        step: 30s
      influx:
        enabled: false
        uri: http://localhost:8086
        token: my-super-secret-auth-token
        org: my-org
        bucket: my-bucket
        step: 10s
    enable:
      jvm: false
      logback: false
      system: false
      process: false
    web:
      server:
        request:
          autotime:
            enabled: false

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

logging:
  level:
    com:
      vmware: info
    org:
      web3j:
        evm: warn
    io:
      micrometer:
        influx: info

server:
  port: 8080 # web UI port for tracking progress
